version: '3.8'
services:
  main:
    build:
      context: .
      dockerfile: Dockerfile.main
    ports:
      - "8000:8000"
    depends_on:
      - modelling
      - mongo
    networks:
      - chistyakova_darya_mlops_mynetwork

  modelling:
    build:
      context: .
      dockerfile: Dockerfile.modelling
    ports:
      - "8001:8001"
    depends_on:
      - mongo
      - mlflow
    networks:
      - chistyakova_darya_mlops_mynetwork
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - mlflow-artifacts:/mlflow/artifacts

  mongo:
    image: mongo:latest
    ports:
      - "27018:27017"
    networks:
      - chistyakova_darya_mlops_mynetwork
    volumes:
      - mongo-data:/data/db

  mongo-init:
    image: mongo:latest
    command: >
      bash -c "
      mongo --host mongo:27017 --eval 'db.createUser({user:\"admin\", pwd:\"admin\", roles:[{role:\"root\", db:\"admin\"}]});
      mongo --host mongo:27017 --eval 'db = db.getSiblingDB(\"Chistyakova_Darya_MLOps\"); db.createCollection(\"request_logs\");';
      "
    depends_on:
      - mongo
    networks:
      - chistyakova_darya_mlops_mynetwork

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    ports:
      - "5000:5000"
    networks:
      - chistyakova_darya_mlops_mynetwork
    volumes:
      - mlflow-artifacts:/mlflow/artifacts

networks:
  chistyakova_darya_mlops_mynetwork:
    external: true

volumes:
  mongo-data:
  mlflow-artifacts:
